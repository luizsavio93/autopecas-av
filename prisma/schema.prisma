generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Produto {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  nome        String
  descricao   String?
  precoCusto  Float?   // ✅ NOVO - preço de custo
  preco       Float    // preço de venda
  quantidade  Int
  fabricante  String?  // ✅ NOVO - fabricante
  fornecedor  Fornecedor? @relation(fields: [fornecedorId], references: [id]) // ✅ NOVO
  fornecedorId String? @db.ObjectId // ✅ NOVO
  vendas      Venda[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("produtos")
}

model Cliente {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  email     String?
  telefone  String?
  cpf       String?   @unique
  endereco  String?   // ✅ NOVO - endereço
  vendas    Venda[]
  createdAt DateTime @default(now())

  @@map("clientes")
}

// ✅ NOVO: Modelo Fornecedor
model Fornecedor {
  id          Int      @id @default(autoincrement())
  razaoSocial String
  cnpj        String?  @unique
  email       String?
  telefone    String?
  // Campos de endereço separados
  logradouro  String?
  numero      String?
  complemento String?
  bairro      String?
  cidade      String?
  estado      String?
  cep         String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Venda {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  produto   Produto  @relation(fields: [produtoId], references: [id])
  produtoId String   @db.ObjectId
  cliente   Cliente? @relation(fields: [clienteId], references: [id])
  clienteId String?  @db.ObjectId
  quantidade Int
  data      DateTime @default(now())
}

model Usuario {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  nome     String
  email    String   @unique
  senha    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("usuarios")
}